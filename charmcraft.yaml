# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.


name: tls-certificates-requirer
type: "charm"
summary: |
  Charm that requests X.509 certificates using the tls-certificates interface.
description: |
  Charm that requests X.509 certificates using the `tls-certificates` interface.

  It uses the user-provided `subject` configuration to generate a certificate signing request
  (CSR) that will be inserted into its unit relation data. In return, a certificate provider
  should use this CSR, generate a certificate, and provide it back into their application
  relation data.

  This charm is useful when developing and testing certificate provider.
links:
  website:
    - https://charmhub.io/tls-certificates-requirer
  source:
    - https://github.com/canonical/tls-certificates-requirer-operator
  issues:
    - https://github.com/canonical/tls-certificates-requirer-operator/issues
  documentation: https://discourse.charmhub.io/t/tls-certificates-requirer/12977

assumes:
  - juju >= 3.1

bases:
  - build-on:
    - name: ubuntu
      channel: "22.04"
      architectures:
        - amd64
    run-on:
    - name: ubuntu
      channel: "22.04"
      architectures:
        - amd64
  - build-on:
    - name: ubuntu
      channel: "22.04"
      architectures:
        - arm64
    run-on:
    - name: ubuntu
      channel: "22.04"
      architectures:
        - arm64

parts:
  charm:
    build-packages:
      - libffi-dev
      - libssl-dev
      - rustc
      - cargo
      - pkg-config

requires:
  certificates:
    interface: tls-certificates

config:
  options:

    num_certificates:
      type: int
      default: 1
      description: |
        Number of certificates to request.
        If the mode is set to `unit`, each unit will request this number of certificates.

    mode:
      type: string
      default: "unit"
      description: |
        Mode in which the charm will request the certificate.
        Allowed values:
          - `unit`: Certificates are managed at the unit level. Each unit will have its own certificate.
          - `app`: Certificates are managed at the application level. The application can have 1 or more certificates.

    common_name:
      type: string
      description: |
        This configuration option should not be set when `num_certificates` is greater than 1.
        Common name to be used in the certificate.
        If set, only the leader unit will request the certificate with this common name.
        Other units will not request certificates.
        If not set, the following value will be used (depending on the mode):
          - `unit`: `cert-<certificate number>.unit-<unit number>.<app name>.<model name>`
          - `app`: `cert-<certificate number>.<app name>.<model name>`

    sans_dns:
      type: string
      description: |
        If set, only the leader unit will request the certificate with this list of DNS Subject Alternative Names (SAN's).
        Other units will not request certificates.
        Comma separated list of DNS Subject Alternative Names (SAN's) to be used in the certificate.
        If not set, the following value will be used (depending on the mode):
          - `unit`: `cert-<certificate number>.unit-<unit number>.<app name>.<model name>`
          - `app`: `cert-<certificate number>.<app name>.<model name>`

    organization_name:
      type: string
      description: |
        Organization name to be used in the certificate.
        If not set, no organization name will be used.
    
    email_address:
      type: string
      description: |
        Email address to be used in the certificate.
        If not set, no email address will be used.

    country_name:
      type: string
      description: |
        Country name to be used in the certificate.
        If not set, no country name will be used.
    
    state_or_province_name:
      type: string
      description: |
        State or province name to be used in the certificate.
        If not set, no state or province name will be used.
    
    locality_name:
      type: string
      description: |
        Locality name to be used in the certificate.
        If not set, no locality name will be used.

    is_ca:
      type: boolean
      default: false
      description: |
        If set to true, the charm will request a certificate that can be used as a Certificate Authority (CA).

actions:
  get-certificate:
    description: Returns the TLS Certificate.
